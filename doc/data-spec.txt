                     TorBEL Export Data Format Specifications

Author: Harry Bock
Created: 26-May-2010
Status: Draft

0. Scope

  This document describes the data formats available for export from the
  Tor Bulk Exit List (TorBEL) suite.

  This document is a work-in-progress and the data format may change quickly
  during the summer in response to demand and implementation problems.

1. Exported Data

1.1. Records

  The basic unit of data in all formats is the router record.  Each
  record is unique based on their (RouterID, ExitAddress) tuple, as
  will be described in section 1.4.

1.2. Record Fields

  Each router record contains a number of fields, whose values and
  significance to data consumers are described below.

  The following data are crucial to consumers of the bulk exit node list,
  with a brief rationale as to why they need this data:

    * ExitAddress: IP address from which traffic actually exits.
                   This may differ from what is advertised in the node's
                   descriptor, likely due to router misconfiguration.
    * LastTestedTimestamp: Date and time when TorBEL last completed testing
                           this node's exit policy.  Precision is to the second.
                           If a node is not yet tested, a default value will be
                           used to indicate this in a manner specific to each
                           export format, documented below.
    * ExitPolicy: Exit policy as advertised by the node.
    * WorkingPorts: A list of ports that are tested by TorBEL and were
                    found to be reachable through the Tor network using
                    this router as an exit node.
    * FailedPorts: A list of ports that are advertised as open by the
                   router's ExitPolicy but were not reachable when
                   tested by TorBEL.
  
  The following data are supplied for convenience to the consumer:

    * RouterID: Advertised ID of the router.  Allows the consumer to
                discover more information about the router with a given
		ExitAddress.
    * RouterNickname: Advertised nickname of the router.
    * InConsensus: A boolean value indicating that this node is in the
                   current consensus advertised by the Tor directory
		   authorities.  TorBEL often receives information about
		   new routers before they are voted on in the consensus.
                   If the router is not yet in the consensus, the consumer
                   may not be able to use the RouterID field to discover
                   more information pertaining to the node.

1.3. Active testing

  WorkingPorts and FailedPorts are determined by TorBEL using the active
  testing mechanisms outlined in the TorBEL test-spec, sections 1.1 and 1.2.
  ExitAddress is determined by TorBEL using the active testing mechanisms
  described in test-spec section 1.3.

  The union of the WorkingPorts and FailedPorts sets is the set of all
  ports tested by TorBEL for a particular router.  If a port does not
  appear in either set, it was not tested for that router.

1.4. Router entry uniqueness concerns

  ExitAddress and RouterID are not guaranteed to be unique.  Rationale:
    1. Router operators can run multiple exits on the same IP address with
       different exit policies.  In this case, RouterID will not be unique.
    2. Router operators may exit to a different port than their ORPort.
       Operators may also exit different ports to different IP addresses,
       using iptables or custom policy routing.  Thus an IP address may
       differ for the same RouterID.

  In these cases exported data will contain multiple records with the same
  ExitAddress or RouterID. Consumers of this data MUST handle these non-unique
  row cases.

2. Supported Data Formats

2.1. CSV

  The simplest bulk output format supported by TorBEL is CSV (comma-separated 
  values).  Since CSV is not a standard and many fragmented versions exist, 
  we standardize on the format as written and understood by Microsoft Excel[1].

  The Microsoft Excel CSV dialect used has the following properties:
    * Fields within a data row are delimited by commas.
    * Data rows are delimited by CRLF ('\r\n').
    * Fields containing the above delimiters are escaped by embedding the field
      inside a set of double quotes. For example, a single field with the text 
        [80, 443, 8080]
      becomes "[80, 443, 8080]".
    * The double quote is escaped by writing two consecutive double quotes. 
      Thus "test """ is interpreted as the text:
        test "
      Fields that contain an escaped double quote are also enclosed in a set
      of double quotes.

  The fields of each row are, in order:

    ExitAddress, RouterID, RouterNickname, LastTestedTimestamp, InConsensus,
      ExitPolicy, WorkingPorts, FailedPorts

  Formats for specific fields are:

    * ExitAddress: IPv4 or IPv6 address in raw integer format.
    * RouterID: Hex string.
    * LastTestedTimestamp: Integer time in UNIX-epoch format. Timestamp 0 indicates
                           that the router has not been tested.
    * InConsensus: "True" or "False".
    * ExitPolicy: Semicolon-separated list of ExitPolicy lines.
    * Working/FailedPorts: List of ports, comma-separated and surrounded by square 
                           brackets. The list elements MAY be separated by spaces.

  This data may be exported in raw or gzipped format.

  An example BEL CSV row:

3507770467,0379F36CD0881B0133AE6D712F9C98F3AE58F7EF,severin,1275018370,True,reject 0.0.0.0/255.0.0.0:0-65535;reject 169.254.0.0/255.255.0.0:0-65535;reject 127.0.0.0/255.0.0.0:0-65535;reject 192.168.0.0/255.255.0.0:0-65535;reject 10.0.0.0/255.0.0.0:0-65535;reject 172.16.0.0/255.240.0.0:0-65535;reject 209.20.84.99/255.255.255.255:0-65535;accept 0.0.0.0/0.0.0.0:80-80;accept 0.0.0.0/0.0.0.0:443-443;reject 0.0.0.0/0.0.0.0:0-65535;,"[53, 443, 8080]","[80, 6667]"

[1] PEP 305 -- CSV File API -- http://www.python.org/dev/peps/pep-0305/
